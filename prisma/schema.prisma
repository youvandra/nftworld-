generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}


model User {
  address String @id
  name String
  bio String? @db.Text
  email String? @unique
  twitterHandle String? @unique
  instagramName String? @unique
  website String? @unique
  profilePhoto String @db.Text @default("/images/user/user_avatar.gif")
  coverPhoto String @db.Text @default("/images/user/banner.jpg")
  collections Collection[]
  featuredNFTs FeaturedNFT[]
}

model Collection {
  address String @id
  title String
  image String
  banner String 
  description String @db.Text
  creator User? @relation(fields: [creatorAddress],references: [address],onDelete: Cascade)
  creatorAddress String?
  isVerified Boolean @default(false)
  floorPrice String @default("0")
  volumeTraded String @default("0")
  owners String @default("1")//number of nft owners
  itemsCount  String @default("0")
  category category @default(art)
  top Boolean @default(false)
  tending Boolean @default(false)
  recent Boolean @default(true)
  bigImage String
	subImage2 String @default("/placeholder.jpg")
	subImage1 String @default("/placeholder.jpg")
	subImage3 String @default("/placeholder.jpg")
	postTime String
	postDate String @default("Last 24 Hours")//Last 24 Hours or Last 7 days or Last 30 days
}

model FeaturedNFT {
  address String @id
  title String
  img String
  creator User @relation(fields: [creatorAddress],references: [address])
  creatorAddress String
}

enum category {
  art
  Collectibles
  photography
  music
  domain
  
}
